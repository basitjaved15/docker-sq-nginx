# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    #include /etc/nginx/conf.d/*.conf;
   # include /etc/nginx/sites-enabled/sonarqube.conf;
#####################HTTP Con##############
server {
  
  listen 80;
 
  
  server_name localhost;
 
  location / {
    proxy_pass http://localhost:9000;
  }
}
###############################################
#
###########################SSL Conf##############

server {
  
  listen 443 ssl;
  server_name localhost;
  access_log /var/log/nginx/ssl.access.log;
  error_log /var/log/nginx/ssl.error.log;
  ssl_certificate "/etc/pki/tls/sonar/sonar.crt";
  ssl_certificate_key "/etc/pki/tls/sonar/sonar.key";
  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout  10m;
  ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
  ssl_prefer_server_ciphers on;
 
  location / {
    proxy_pass http://localhost:9000;
  }
}

##########################################################

#############################Reidirect to 443###############
#
server {

    listen 80 default_server;


    server_name _;


    return 301 https://$host$request_uri;

}
############################################
}
